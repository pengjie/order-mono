<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huinong.truffle.payment.order.mono.dao.write.OrderItemWriteDAO">

	<!-- 添加订单信息 -->
	<insert id="addOrderItem" useGeneratedKeys="true" keyProperty="id" parameterType="com.huinong.truffle.payment.order.mono.entity.HnpDetailEntity">
		INSERT INTO hnp_order (amt,app_id,deleted,group_order_no,in_uid,in_uname,merchant_off_amt,pay_off_amt,sys_off_amt,need_pay,order_id,order_summary,
							order_timestamp,out_uid,pay_state,shop_name,order_from_system,`hash`,serial_number) 
		VALUES(
			#{amt,jdbcType=DECIMAL},#{appId,jdbcType=INTEGER},#{deleted,jdbcType=INTEGER},
            #{groupOrderNo,jdbcType=VARCHAR},#{inUid,jdbcType=BIGINT},#{inUname,jdbcType=VARCHAR},
            #{merchantOffAmt,jdbcType=DECIMAL},#{payOffAmt,jdbcType=DECIMAL},#{sysOffAmt,jdbcType=DECIMAL},
            #{needPay,jdbcType=DECIMAL},#{orderId,jdbcType=BIGINT},#{orderSummary,jdbcType=VARCHAR},
            #{orderTimestamp,jdbcType=TIMESTAMP},#{outUid,jdbcType=BIGINT},#{payState,jdbcType=VARCHAR},
            #{shopName,jdbcType=VARCHAR},#{orderFromSystem,jdbcType=VARCHAR},#{hash,jdbcType=VARCHAR},
            #{serialNumber,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 批量添加订单列表 -->
	<insert id="addBatchItem" parameterType="java.util.List">
		<selectKey resultType="long" keyProperty="id" order="AFTER">  
	        SELECT  
	        LAST_INSERT_ID()  
	    </selectKey> 
		INSERT INTO hnp_order (amt,app_id,deleted,group_order_no,in_uid,in_uname,merchant_off_amt,pay_off_amt,sys_off_amt,need_pay,order_id,order_summary,
							order_timestamp,out_uid,pay_state,shop_name,order_from_system,`hash`,serial_number) 
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
            (
            	#{item.amt,jdbcType=DECIMAL},#{item.appId,jdbcType=INTEGER},#{item.deleted,jdbcType=INTEGER},
            	#{item.groupOrderNo,jdbcType=VARCHAR},#{item.inUid,jdbcType=BIGINT},#{item.inUname,jdbcType=VARCHAR},
            	#{item.merchantOffAmt,jdbcType=DECIMAL},#{item.payOffAmt,jdbcType=DECIMAL},#{item.sysOffAmt,jdbcType=DECIMAL},
            	#{item.needPay,jdbcType=DECIMAL},#{item.orderId,jdbcType=BIGINT},#{item.orderSummary,jdbcType=VARCHAR},
            	#{item.orderTimestamp,jdbcType=TIMESTAMP},#{item.outUid,jdbcType=BIGINT},#{item.payState,jdbcType=VARCHAR},
            	#{item.shopName,jdbcType=VARCHAR},#{item.orderFromSystem,jdbcType=VARCHAR},#{item.hash,jdbcType=VARCHAR},
            	#{item.serialNumber,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    
     <!-- 更新状态 -->
     <update id="update">
     	UPDATE hnp_order SET pay_state = #{payState,jdbcType=VARCHAR},payed_timestamp = now()
     	WHERE group_order_no = #{groupOrderNo,jdbcType=VARCHAR}
     </update>
    
    <!-- 更新状态{时间} -->
    <update id="updateOrderStatus">
    	UPDATE hnp_order  SET pay_state=#{entity.payState,jdbcType=VARCHAR}
    	<if test="entity != null">
    		<if test="entity.payedTimestamp != null">
    			,payed_timestamp = #{entity.payedTimestamp}
    		</if>
    		<if test="entity.finishedTimestamp != null">
    			,finished_timestamp = #{entity.finishedTimestamp}
    		</if>  
    		<if test="entity.closedTimestamp != null">
    			,closed_timestamp = #{entity.closedTimestamp}
    		</if> 
    		<if test="entity.refundTimestamp != null">
    			,refund_timestamp = #{entity.refundTimestamp}
    		</if>  
    	</if>
    	WHERE id = #{entity.orderId}
    </update>
    
   <!-- 删除订单 -->
   <delete id="delete" parameterType="java.lang.String">
   		delete from hnp_order where group_order_no = #{groupOrderNo,jdbcType=VARCHAR}
   </delete>

</mapper>